from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackQueryHandler
from marzban import MarzbanClient
from yandex_disk import YandexDiskClient
from config import Config

class TelegramBot:
    def __init__(self, config: Config):
        self.config = config
        self.marzban = MarzbanClient(config.marzban)
        self.yandex = YandexDiskClient(config.yandex.oauth_token)
        
        self.app = Application.builder().token(config.telegram.bot_token).build()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        self.app.add_handler(CommandHandler("start", self.start))
        self.app.add_handler(CallbackQueryHandler(self.button_handler))
        self.app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.search_handler))

    async def start(self, update: Update, _):
        if update.effective_user.id != self.config.telegram.admin_id:
            await update.message.reply_text("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
            return
            
        keyboard = [
            [InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="update")],
            [InlineKeyboardButton("üîç –ü–æ–∏—Å–∫ –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="search")]
        ]
        await update.message.reply_text(
            "–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Marzban:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    async def button_handler(self, update: Update, _):
        query = update.callback_query
        if query.data == "update":
            await self.marzban.sync_data()
            await query.answer("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        elif query.data == "search":
            await query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏:")

    async def search_handler(self, update: Update, _):
        username = update.message.text
        user = await self.marzban.get_user(username)
        
        if not user:
            await update.message.reply_text("–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return
            
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
        file_path = f"/marzban_subscriptions/{username}.txt"
        content = f"–ü–æ–¥–ø–∏—Å–∫–∞: {username}\n–°—Å—ã–ª–∫–∞: {user.subscription_url}"
        public_url = await self.yandex.upload_and_publish(file_path, content)
        
        await update.message.reply_text(f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É:\n{public_url}")

    def run(self):
        self.app.run_polling()